# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: 
      - main
  pull_request:
    branches:
      - main
  # schedule:

  # #   # trigger build every 15 minutes
  #    - cron: "*/60 * * * *"

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}  
        restore-keys: ${{ runner.os }}-gradle

    - name: Build with Gradle
      run: ./gradlew build

    - name: Test
      run: ./gradlew clean test

    # ssh into virtual machine 
    - name: Run SSH command
      uses: garygrossgarten/github-action-ssh@v0.5.0
      with:

      # cd into client repo
      # git pull
      # change rights to bash script
      # execute bash script which:
          # kills existing Java processes
          # runs gradle application in the background to start recommendation server
          # runs the gradle integrationTask and push to github
       command: cd Comp598_Project/seai-client-p4/ && git pull && chmod +x background_run_app.sh && sh ./background_run_app.sh
       host: fall2020-comp598-4.cs.mcgill.ca
       username: localuser
       privateKey: ${{secrets.SSH_ACTION_SECRET}}

    - name: Get current date
      uses: 1466587594/get-current-time@v2
      id: current-time
      with:
        format: YYYY-MM-DD-HH-MM
    - name: Test with environment variables
      env:
        DATE: ${{ steps.current-time.outputs.formattedTime }}
      run: echo $DATE


    - name: Checkout code
      uses: actions/checkout@v2
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}} # actions automatically generates this
      with:
        tag_name: ${{ steps.current-time.outputs.formattedTime }}
        release_name: Release ${{ steps.current-time.outputs.formattedTime }}
        body: Updated collaborative filtering model
        draft: false
        prerelease: false



    - name: Check out the repo
      uses: actions/checkout@v2
    
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
#           repository: teamjelly/se4ai-client-p4

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64,linux/arm64,linux/386
        push: true
        tags: |
          user/app:latest
          user/app:${{ steps.current-time.outputs}}
