# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  # # connect to group's VM to continuously build and deploy machine localy
  # ssh_connect:

  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Run SSH command
  #     uses: garygrossgarten/github-action-ssh@v0.5.0
  #     with:
  #       command: ls -a
  #       host: fall2020-comp598-4.cs.mcgill.ca
  #       username: localuser
  #       privateKey: ${{secrets.SSH_ACTION_SECRET}}

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Run SSH command
      uses: garygrossgarten/github-action-ssh@v0.5.0
      with:
        command: ls -a
        host: fall2020-comp598-4.cs.mcgill.ca
        username: localuser
        privateKey: ${{secrets.SSH_ACTION_SECRET}}

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    # Make sure to stop any ongoing deamons prior to rerunning and deploying new machine
    - name: Stop ongoing Gradle Deamons in order to rerun
      run: ./gradlew --stop

    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}  
        restore-keys: ${{ runner.os }}-gradle


    - name: Build with Gradle
      run: ./gradlew build

    - name: Deploy-local with Gradle Run
      run: ./gradlew run


